{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/ViewList/index.js\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport api from \"../../api\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport { compose } from \"recompose\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { EditLink } from \"../EditList\";\nimport styles from \"../../constants/styles\";\nimport RemoveList from \"../RemoveList\";\nimport { PracticeLink } from \"../PracticeList\";\nimport { TestsLink } from \"../Test\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\n\nconst SampleTerms = props => {\n  const limited = props.cards.slice(0, 5);\n  return limited.map((item, i) => {\n    return /*#__PURE__*/React.createElement(Button, {\n      key: `sample-${i}`,\n      variant: \"outlined\",\n      className: props.t.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, item.term);\n  });\n};\n\nclass ViewList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await api.getAllStudySets().then(res => {\n        var items = res.data.data;\n        this.setState({\n          items\n        });\n      });\n    };\n\n    this.createCard = (item, classes) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        key: item,\n        className: classes.listCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: classes.listCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, item.title)))));\n    };\n\n    this.handleRemoveSet = keyVal => {\n      console.log(`handle remove set for key ${keyVal}`);\n      let current = [...this.state.items];\n      current.splice(keyVal, 1);\n      this.setState({\n        items: current\n      });\n    };\n\n    this.handleExpandClickID = i => {\n      let {\n        expandedId\n      } = this.state;\n\n      if (expandedId.includes(i)) {\n        expandedId.splice(expandedId.indexOf(i), 1);\n      } else {\n        expandedId.push(i);\n      }\n\n      this.setState({\n        expandedId\n      });\n      console.log(expandedId);\n    };\n\n    this.getGridListCols = () => {\n      const {\n        width\n      } = this.state;\n\n      if (isWidthUp(\"md\", width)) {\n        return 2;\n      }\n\n      return 1;\n    };\n\n    this.state = {\n      items: [],\n      expandedId: [],\n      width: props.width\n    };\n  }\n\n  render() {\n    const {\n      items,\n      expandedId,\n      width\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    const columns = width === \"sm\" || width === \"xs\" ? 1 : 2;\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      className: classes.intro,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Your Lists\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GridList, {\n      spacing: 30,\n      cellHeight: \"auto\",\n      cols: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, items.map((item, val) => {\n      return /*#__PURE__*/React.createElement(GridListTile, {\n        key: val,\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: classes.listCard,\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        title: /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        }, item.title),\n        subheader: /*#__PURE__*/React.createElement(Typography, {\n          variant: \"body1\",\n          gutterBottom: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }\n        }, \"Last modified \", item.updatedAt),\n        className: classes.cardHeading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(EditLink, {\n        id: item._id,\n        className: classes.left,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(PracticeLink, {\n        id: item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(TestsLink, {\n        id: item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(RemoveList, {\n        id: item._id,\n        onRemoveSet: this.handleRemoveSet,\n        onChange: this.handleRemoveSet,\n        keyVal: val,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(IconButton, {\n        className: classes.expand,\n        onClick: () => this.handleExpandClickID(val),\n        \"aria-expanded\": expandedId.includes(val),\n        \"aria-label\": \"show more\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Collapse, {\n        in: expandedId.includes(val),\n        timeout: \"auto\",\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        paragraph: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, \"Sample Terms:\"), /*#__PURE__*/React.createElement(SampleTerms, {\n        t: classes,\n        cards: item.cards,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      })))));\n    }))));\n  }\n\n}\n\nexport default compose(withStyles(styles), withWidth())(ViewList);","map":{"version":3,"sources":["/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/ViewList/index.js"],"names":["React","Component","withStyles","api","Card","CardHeader","CardContent","Typography","Container","Grid","GridList","GridListTile","withWidth","isWidthUp","compose","CardActions","EditLink","styles","RemoveList","PracticeLink","TestsLink","IconButton","ExpandMoreIcon","Collapse","Button","SampleTerms","props","limited","cards","slice","map","item","i","t","button","term","ViewList","constructor","componentDidMount","getAllStudySets","then","res","items","data","setState","createCard","classes","listCard","title","handleRemoveSet","keyVal","console","log","current","state","splice","handleExpandClickID","expandedId","includes","indexOf","push","getGridListCols","width","render","columns","root","intro","val","updatedAt","cardHeading","_id","left","expand"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport api from \"../../api\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport { compose } from \"recompose\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport { EditLink } from \"../EditList\";\r\nimport styles from \"../../constants/styles\";\r\nimport RemoveList from \"../RemoveList\";\r\nimport { PracticeLink } from \"../PracticeList\";\r\nimport { TestsLink } from \"../Test\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst SampleTerms = (props) => {\r\n  const limited = props.cards.slice(0, 5);\r\n  return limited.map((item, i) => {\r\n    return (\r\n      <Button key={`sample-${i}`} variant=\"outlined\" className={props.t.button}>\r\n        {item.term}\r\n      </Button>\r\n    );\r\n  });\r\n};\r\n\r\nclass ViewList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      expandedId: [],\r\n      width: props.width,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await api.getAllStudySets().then((res) => {\r\n      var items = res.data.data;\r\n      this.setState({\r\n        items,\r\n      });\r\n    });\r\n  };\r\n\r\n  createCard = (item, classes) => {\r\n    return (\r\n      <div>\r\n        <Grid key={item} className={classes.listCard}>\r\n          <Card className={classes.listCard}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">{item.title}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  handleRemoveSet = (keyVal) => {\r\n    console.log(`handle remove set for key ${keyVal}`);\r\n    let current = [...this.state.items];\r\n    current.splice(keyVal, 1);\r\n    this.setState({ items: current });\r\n  };\r\n\r\n  handleExpandClickID = (i) => {\r\n    let { expandedId } = this.state;\r\n    if (expandedId.includes(i)) {\r\n      expandedId.splice(expandedId.indexOf(i), 1);\r\n    } else {\r\n      expandedId.push(i);\r\n    }\r\n    this.setState({ expandedId });\r\n    console.log(expandedId);\r\n  };\r\n\r\n  getGridListCols = () => {\r\n    const { width } = this.state;\r\n    if (isWidthUp(\"md\", width)) {\r\n      return 2;\r\n    }\r\n\r\n    return 1;\r\n  };\r\n\r\n  render() {\r\n    const { items, expandedId, width } = this.state;\r\n    const { classes } = this.props;\r\n    const columns = width === \"sm\" || width === \"xs\" ? 1 : 2;\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"lg\">\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h3\" className={classes.intro}>\r\n            Your Lists\r\n          </Typography>\r\n          <br />\r\n          {/* <Grid container spacing={3}> */}\r\n          <GridList\r\n            spacing={30}\r\n            cellHeight=\"auto\"\r\n            cols={columns}\r\n          >\r\n            {items.map((item, val) => {\r\n              return (\r\n                <GridListTile key={val} className={classes.root}>\r\n                  <Card className={classes.listCard} raised>\r\n                    <CardHeader\r\n                      title={\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                          {item.title}\r\n                        </Typography>\r\n                      }\r\n                      subheader={\r\n                        <Typography variant=\"body1\" gutterBottom>\r\n                          Last modified {item.updatedAt}\r\n                        </Typography>\r\n                      }\r\n                      className={classes.cardHeading}\r\n                    />\r\n                    <CardActions>\r\n                      <EditLink id={item._id} className={classes.left} />\r\n                      <PracticeLink id={item._id} />\r\n                      <TestsLink id={item._id} />\r\n                      <RemoveList\r\n                        id={item._id}\r\n                        onRemoveSet={this.handleRemoveSet}\r\n                        onChange={this.handleRemoveSet}\r\n                        keyVal={val}\r\n                      />\r\n                      <IconButton\r\n                        className={classes.expand}\r\n                        onClick={() => this.handleExpandClickID(val)}\r\n                        aria-expanded={expandedId.includes(val)}\r\n                        aria-label=\"show more\"\r\n                      >\r\n                        <ExpandMoreIcon />\r\n                      </IconButton>\r\n                    </CardActions>\r\n                    <Collapse\r\n                      in={expandedId.includes(val)}\r\n                      timeout=\"auto\"\r\n                      unmountOnExit\r\n                    >\r\n                      <CardContent>\r\n                        <Typography paragraph>Sample Terms:</Typography>\r\n                        <SampleTerms t={classes} cards={item.cards} />\r\n                      </CardContent>\r\n                    </Collapse>\r\n                  </Card>\r\n                </GridListTile>\r\n              );\r\n            })}\r\n          </GridList>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles), withWidth())(ViewList);\r\n"]},"metadata":{},"sourceType":"module"}
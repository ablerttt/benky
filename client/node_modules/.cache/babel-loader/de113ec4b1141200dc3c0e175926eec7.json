{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/NewList/InvalidDialog.js\";\nimport React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst ErrorCard = props => {\n  const code = props.code;\n  var term = \"\";\n  var err = \"\";\n  const errCode = code.search(/[tdm]/);\n  const index = parseInt(code.substring(0, errCode));\n\n  if (props.code === \"a\" || props.code === \"e\") {\n    term = \"Title\";\n    err = props.code === \"a\" ? \"Empty title\" : \"Current title is already in use\";\n  } else {\n    term = \"Term \" + (parseInt(code.substring(0, index)) + 1) + \": \" + (props.cards[index].term === \"\" ? \"[Empty]\" : props.cards[index].term);\n\n    for (let i = 1; i < code.length; i++) {\n      if (code[i] === \"t\") {\n        err = \"Empty term\";\n      }\n\n      if (code[i] === \"m\") {\n        err = \"Duplicate term\";\n      }\n\n      if (code[i] === \"d\") {\n        if (err !== \"\") {\n          err += \", empty description\";\n        } else {\n          err = \"Empty description\";\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, {\n    key: `error=${code[0]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: `${term}`,\n    secondary: err,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst ListErrors = props => {\n  return /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, props.errors.map((i, c) => {\n    return /*#__PURE__*/React.createElement(ErrorCard, {\n      code: i,\n      c: c,\n      key: `error-card-${c}`,\n      cards: props.cards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nconst InvalidDialog = props => {\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: props.showDialog,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Errors exist within your set.\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Please correct the following inconsistencies:\"), /*#__PURE__*/React.createElement(ListErrors, {\n    errors: props.errors,\n    cards: props.cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.closeInvalidDialog,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n};\n\nexport default InvalidDialog;","map":{"version":3,"sources":["/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/NewList/InvalidDialog.js"],"names":["React","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","List","ListItem","ListItemText","ErrorCard","props","code","term","err","errCode","search","index","parseInt","substring","cards","i","length","ListErrors","errors","map","c","InvalidDialog","showDialog","closeInvalidDialog"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst ErrorCard = (props) => {\r\n  const code = props.code;\r\n  var term = \"\";\r\n  var err = \"\";\r\n  const errCode = code.search(/[tdm]/);\r\n  const index = parseInt(code.substring(0, errCode));\r\n\r\n  if (props.code === \"a\" || props.code === \"e\") {\r\n    term = \"Title\";\r\n    err =\r\n      props.code === \"a\" ? \"Empty title\" : \"Current title is already in use\";\r\n  } else {\r\n    term =\r\n      \"Term \" +\r\n      (parseInt(code.substring(0, index)) + 1) +\r\n      \": \" +\r\n      (props.cards[index].term === \"\" ? \"[Empty]\" : props.cards[index].term);\r\n    for (let i = 1; i < code.length; i++) {\r\n      if (code[i] === \"t\") {\r\n        err = \"Empty term\";\r\n      }\r\n      if (code[i] === \"m\") {\r\n        err = \"Duplicate term\";\r\n      }\r\n      if (code[i] === \"d\") {\r\n        if (err !== \"\") {\r\n          err += \", empty description\";\r\n        } else {\r\n          err = \"Empty description\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ListItem key={`error=${code[0]}`}>\r\n      <ListItemText primary={`${term}`} secondary={err} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nconst ListErrors = (props) => {\r\n  return (\r\n    <List dense>\r\n      {props.errors.map((i, c) => {\r\n        return (\r\n          <ErrorCard\r\n            code={i}\r\n            c={c}\r\n            key={`error-card-${c}`}\r\n            cards={props.cards}\r\n          />\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst InvalidDialog = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.showDialog}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        {\"Errors exist within your set.\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          Please correct the following inconsistencies:\r\n        </DialogContentText>\r\n        <ListErrors errors={props.errors} cards={props.cards} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.closeInvalidDialog} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default InvalidDialog;\r\n"]},"metadata":{},"sourceType":"module"}
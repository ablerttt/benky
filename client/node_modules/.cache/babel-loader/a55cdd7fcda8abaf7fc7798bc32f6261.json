{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/Test/index.js\";\nimport React from \"react\";\nimport api from \"../../api\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport LoadingPage from \"../EditList/LoadingList\";\nimport NotFoundPage from \"../../pages/404\";\nimport EmptySet from \"../../pages/EmptySet\";\nimport styles from \"../../constants/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await api.getStudySetById(this.state.id).then(res => {\n        if (res.data.success && res.data.valid) {\n          this.setState({\n            valid: true,\n            title: res.data.data.title,\n            cards: res.data.data.cards\n          });\n        } else {\n          this.setState({\n            valid: false\n          });\n        }\n\n        console.log(res);\n      }).catch(e => {\n        console.log(e);\n      });\n      this.setState({\n        checked: true\n      });\n    };\n\n    this.state = {\n      render: false,\n      id: this.props.match.params.id,\n      valid: false,\n      checked: false\n    };\n  }\n\n  render() {\n    let renderContainer = /*#__PURE__*/React.createElement(LoadingPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }\n    });\n    const {\n      classes\n    } = this.props;\n    const {\n      valid,\n      cards,\n      title,\n      checked,\n      id\n    } = this.state;\n\n    if (valid) {\n      renderContainer = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        className: classes.intro,\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, \"Test: \", title), cards.length === 0 && /*#__PURE__*/React.createElement(EmptySet, {\n        id: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 34\n        }\n      }), cards.length > 0 && /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }\n      }, \"Testing!!!\"));\n    } else if (valid) {\n      renderContainer = /*#__PURE__*/React.createElement(EmptySet, {\n        title: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      });\n    } else if (!valid && checked) {\n      renderContainer = /*#__PURE__*/React.createElement(NotFoundPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      });\n    }\n\n    return renderContainer;\n  }\n\n}\n\nconst TestLink = props => ({\n  render() {\n    return /*#__PURE__*/React.createElement(CardActionArea, {\n      component: Link,\n      to: `/test/${props.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, props.title), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Last edited \", props.updatedAt)));\n  }\n\n});\n\nclass TestLinkBase extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.testSet = e => {\n      e.preventDefault();\n      window.location.href = `/test/${this.props.id}`;\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.testSet,\n      color: \"primary\",\n      className: classes.primaryLightButton,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Test\"));\n  }\n\n}\n\nconst TestsLink = withStyles(styles)(TestLinkBase);\nexport { TestLink, TestsLink };\nexport default withStyles(styles)(Test);","map":{"version":3,"sources":["/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/Test/index.js"],"names":["React","api","CardActionArea","CardContent","Typography","Link","LoadingPage","NotFoundPage","EmptySet","styles","Button","withStyles","Test","Component","constructor","props","componentDidMount","getStudySetById","state","id","then","res","data","success","valid","setState","title","cards","console","log","catch","e","checked","render","match","params","renderContainer","classes","intro","length","TestLink","updatedAt","TestLinkBase","testSet","preventDefault","window","location","href","primaryLightButton","TestsLink"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport api from \"../../api\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingPage from \"../EditList/LoadingList\";\r\nimport NotFoundPage from \"../../pages/404\";\r\nimport EmptySet from \"../../pages/EmptySet\";\r\nimport styles from \"../../constants/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nclass Test extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      render: false,\r\n      id: this.props.match.params.id,\r\n      valid: false,\r\n      checked: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await api\r\n      .getStudySetById(this.state.id)\r\n      .then((res) => {\r\n        if (res.data.success && res.data.valid) {\r\n          this.setState({\r\n            valid: true,\r\n            title: res.data.data.title,\r\n            cards: res.data.data.cards,\r\n          });\r\n        } else {\r\n          this.setState({ valid: false });\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    this.setState({ checked: true });\r\n  };\r\n\r\n  render() {\r\n    let renderContainer = <LoadingPage />;\r\n    const { classes } = this.props;\r\n    const { valid, cards, title, checked, id } = this.state;\r\n    if (valid) {\r\n      renderContainer = (\r\n        <div>\r\n          <Typography className={classes.intro} variant=\"h3\">\r\n            Test: {title}\r\n          </Typography>\r\n          {cards.length === 0 && <EmptySet id={id} />}\r\n          {cards.length > 0 && <Typography variant=\"h2\">Testing!!!</Typography>}\r\n        </div>\r\n      );\r\n    } else if (valid) {\r\n      renderContainer = <EmptySet title={title} />;\r\n    } else if (!valid && checked) {\r\n      renderContainer = <NotFoundPage />;\r\n    }\r\n\r\n    return renderContainer;\r\n  }\r\n}\r\n\r\nconst TestLink = (props) => ({\r\n  render() {\r\n    return (\r\n      <CardActionArea component={Link} to={`/test/${props.id}`}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\">{props.title}</Typography>\r\n          <br />\r\n          <Typography variant=\"body\" gutterBottom>\r\n            Last edited {props.updatedAt}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    );\r\n  },\r\n});\r\n\r\nclass TestLinkBase extends React.Component {\r\n  testSet = (e) => {\r\n    e.preventDefault();\r\n\r\n    window.location.href = `/test/${this.props.id}`;\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={this.testSet}\r\n          color=\"primary\"\r\n          className={classes.primaryLightButton}\r\n          variant=\"contained\"\r\n        >\r\n          Test\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TestsLink = withStyles(styles)(TestLinkBase);\r\n\r\nexport { TestLink, TestsLink };\r\n\r\nexport default withStyles(styles)(Test);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/auth/EmailChange/index.js\";\nimport React from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport styles from \"../../constants/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { compose } from \"recompose\";\n\nclass EmailChange extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        error: \"\",\n        success: \"\"\n      });\n      const oldEmail = document.getElementById(\"oldEmail\").value;\n      const newEmail = document.getElementById(\"newEmail\").value;\n      const correctOldEmail = this.props.firebase.doVerifyEmail(oldEmail);\n\n      if (!correctOldEmail) {\n        this.setState({\n          error: \"Old email address provided does not match with this user's email address.\"\n        });\n        return;\n      } else {\n        await this.props.firebase.doUpdateEmail(newEmail).then(res => {\n          console.log(\"RES\");\n          console.log(res);\n          this.setState({\n            erorr: \"\",\n            success: \"Email successfully updated!\",\n            oldEmail: \"\",\n            newEmail: \"\"\n          });\n        }).catch(e => {\n          console.log(\"ERR\");\n          console.log(e);\n          this.setState({\n            error: e.message,\n            success: \"\"\n          });\n        });\n      }\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      error: \"\",\n      success: \"\",\n      oldEmail: \"\",\n      newEmail: \"\"\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      error,\n      success,\n      oldEmail,\n      newEmail\n    } = this.state;\n    const isInvalid = oldEmail === \"\" || newEmail === \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Change the email that your account is linked to. If you forget your password, you'll receive any emails from this email instead.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"oldEmail\",\n      name: \"oldEmail\",\n      label: \"Old Email Address\",\n      onChange: this.onChange,\n      value: oldEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"newEmail\",\n      name: \"newEmail\",\n      label: \"New Email Address\",\n      onChange: this.onChange,\n      value: newEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      className: classes.primaryLightButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Change Email\")), error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, error), success && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, success));\n  }\n\n}\n\nexport default compose(withStyles(styles), withFirebase)(EmailChange);","map":{"version":3,"sources":["/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/auth/EmailChange/index.js"],"names":["React","withFirebase","Button","TextField","styles","withStyles","compose","EmailChange","Component","constructor","props","onSubmit","e","preventDefault","setState","error","success","oldEmail","document","getElementById","value","newEmail","correctOldEmail","firebase","doVerifyEmail","doUpdateEmail","then","res","console","log","erorr","catch","message","onChange","event","target","name","state","render","classes","isInvalid","primaryLightButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport styles from \"../../constants/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { compose } from \"recompose\";\r\n\r\nclass EmailChange extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: \"\", success: \"\", oldEmail: \"\", newEmail: \"\" };\r\n  }\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ error: \"\", success: \"\" });\r\n    const oldEmail = document.getElementById(\"oldEmail\").value;\r\n    const newEmail = document.getElementById(\"newEmail\").value;\r\n    const correctOldEmail = this.props.firebase.doVerifyEmail(oldEmail);\r\n    if (!correctOldEmail) {\r\n      this.setState({\r\n        error:\r\n          \"Old email address provided does not match with this user's email address.\",\r\n      });\r\n      return;\r\n    } else {\r\n      await this.props.firebase\r\n        .doUpdateEmail(newEmail)\r\n        .then((res) => {\r\n          console.log(\"RES\");\r\n          console.log(res);\r\n          this.setState({\r\n            erorr: \"\",\r\n            success: \"Email successfully updated!\",\r\n            oldEmail: \"\",\r\n            newEmail: \"\",\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"ERR\");\r\n          console.log(e);\r\n          this.setState({ error: e.message, success: \"\" });\r\n        });\r\n    }\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { error, success, oldEmail, newEmail } = this.state;\r\n    const isInvalid = oldEmail === \"\" || newEmail === \"\";\r\n    return (\r\n      <div>\r\n        <div>\r\n          Change the email that your account is linked to. If you forget your\r\n          password, you'll receive any emails from this email instead.\r\n        </div>\r\n        <br />\r\n        <form onSubmit={this.onSubmit}>\r\n          <TextField\r\n            id=\"oldEmail\"\r\n            name=\"oldEmail\"\r\n            label=\"Old Email Address\"\r\n            onChange={this.onChange}\r\n            value={oldEmail}\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"newEmail\"\r\n            name=\"newEmail\"\r\n            label=\"New Email Address\"\r\n            onChange={this.onChange}\r\n            value={newEmail}\r\n          />\r\n          <br />\r\n          <br />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            className={classes.primaryLightButton}\r\n          >\r\n            Change Email\r\n          </Button>\r\n        </form>\r\n        {error && <p>{error}</p>}\r\n        {success && <p>{success}</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles), withFirebase)(EmailChange);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/auth/PasswordChange/index.js\";\nimport React, { Component } from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { compose } from \"recompose\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../constants/styles\";\nimport { Console } from \"console\";\nconst INITIAL_STATE = {\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  currentPassword: \"\",\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.verifyCurrentPassword = async currentPassword => {\n      this.props.firebase.doCurrentPasswordVerification(currentPassword);\n    };\n\n    this.updateCurrentPassword = async password => {\n      this.props.firebase.doPasswordUpdate(password);\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault(); // this.setState({ error: \"\" });\n\n      const {\n        passwordOne,\n        passwordTwo,\n        currentPassword\n      } = this.state;\n\n      if (passwordOne !== passwordTwo) {\n        this.setState({\n          error: {\n            message: \"The two passwords are different from each other.\"\n          }\n        });\n        return;\n      }\n\n      await this.verifyCurrentPassword(currentPassword).then(res => {\n        console.log(\"PASSWORD VERIFY RES\");\n        console.log(res);\n      }).catch(e => {\n        console.log(\"PASSWORD VERIFY ERR\");\n        console.log(e);\n      });\n      await this.updateCurrentPassword(passwordOne).then(res => {\n        console.log(\"PASSWORD UPDATE RES\");\n        console.log(res);\n      }).catch(e => {\n        console.log(\"PASSWORD UPDATE ERR\");\n        console.log(e);\n      }); // await this.props.firebase\n      //   .doCurrentPasswordVerification(currentPassword)\n      //   .then((res) => {\n      //     console.log(\"PASSWORD VERIFY RES\");\n      //     console.log(res);\n      //   })\n      //   .catch((e) => {\n      //     console.log(\"PASSWORD VERIFY ERR\");\n      //     console.log(e);\n      //     this.setState({ error: e.message });\n      //     return;\n      //   });\n      // this.props.firebase\n      //   .doPasswordUpdate(passwordOne)\n      //   .then((res) => {\n      //     console.log(\"PASSWORD CHANGE RES\");\n      //     console.log(res);\n      //   })\n      //   .catch((e) => {\n      //     console.log(\"PASSWORD CHANGE ERR\");\n      //     console.log(e);\n      //     this.setState({ erorr: e.message });\n      //     return;\n      //   });\n\n      console.log(\"SUCCESS\");\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = { ...INITIAL_STATE,\n      updated: false,\n      success: \"\"\n    };\n  }\n\n  render() {\n    const {\n      currentPassword,\n      passwordOne,\n      passwordTwo,\n      error,\n      success\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Change the email that your account is linked to. If you forget your password, you'll receive any emails from this email instead.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"currentPassword\",\n      value: currentPassword,\n      onChange: this.onChange,\n      type: \"password\",\n      label: \"Original Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.onChange,\n      type: \"password\",\n      label: \"New Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.onChange,\n      type: \"password\",\n      label: \"Confirm New Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: classes.primaryLightButton,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"Reset Password\"), error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, error), success && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, success)));\n  }\n\n} // export default withFirebase(PasswordChangeForm);\n\n\nexport default compose(withFirebase, withStyles(styles))(PasswordChangeForm);","map":{"version":3,"sources":["/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/auth/PasswordChange/index.js"],"names":["React","Component","withFirebase","TextField","Button","compose","withStyles","styles","Console","INITIAL_STATE","passwordOne","passwordTwo","currentPassword","error","PasswordChangeForm","constructor","props","verifyCurrentPassword","firebase","doCurrentPasswordVerification","updateCurrentPassword","password","doPasswordUpdate","onSubmit","e","preventDefault","state","setState","message","then","res","console","log","catch","onChange","event","target","name","value","updated","success","render","classes","primaryLightButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { compose } from \"recompose\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"../../constants/styles\";\r\nimport { Console } from \"console\";\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  currentPassword: \"\",\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE, updated: false, success: \"\" };\r\n  }\r\n\r\n  verifyCurrentPassword = async(currentPassword) => {\r\n    this.props.firebase.doCurrentPasswordVerification(currentPassword);\r\n  };\r\n\r\n  updateCurrentPassword = async(password) => {\r\n    this.props.firebase.doPasswordUpdate(password);\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // this.setState({ error: \"\" });\r\n    const { passwordOne, passwordTwo, currentPassword } = this.state;\r\n\r\n    if (passwordOne !== passwordTwo) {\r\n      this.setState({\r\n        error: { message: \"The two passwords are different from each other.\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    await this.verifyCurrentPassword(currentPassword)\r\n      .then((res) => {\r\n        console.log(\"PASSWORD VERIFY RES\");\r\n        console.log(res);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"PASSWORD VERIFY ERR\");\r\n        console.log(e);\r\n      });\r\n\r\n    await this.updateCurrentPassword(passwordOne)\r\n      .then((res) => {\r\n        console.log(\"PASSWORD UPDATE RES\");\r\n        console.log(res);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"PASSWORD UPDATE ERR\");\r\n        console.log(e);\r\n      });\r\n    // await this.props.firebase\r\n    //   .doCurrentPasswordVerification(currentPassword)\r\n    //   .then((res) => {\r\n    //     console.log(\"PASSWORD VERIFY RES\");\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((e) => {\r\n    //     console.log(\"PASSWORD VERIFY ERR\");\r\n    //     console.log(e);\r\n    //     this.setState({ error: e.message });\r\n    //     return;\r\n    //   });\r\n\r\n    // this.props.firebase\r\n    //   .doPasswordUpdate(passwordOne)\r\n    //   .then((res) => {\r\n    //     console.log(\"PASSWORD CHANGE RES\");\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((e) => {\r\n    //     console.log(\"PASSWORD CHANGE ERR\");\r\n    //     console.log(e);\r\n    //     this.setState({ erorr: e.message });\r\n    //     return;\r\n    //   });\r\n\r\n    console.log(\"SUCCESS\");\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currentPassword,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n      success,\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <div>\r\n          Change the email that your account is linked to. If you forget your\r\n          password, you'll receive any emails from this email instead.\r\n        </div>\r\n        <br />\r\n        <form onSubmit={this.onSubmit}>\r\n          <TextField\r\n            name=\"currentPassword\"\r\n            value={currentPassword}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            label=\"Original Password\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            name=\"passwordOne\"\r\n            value={passwordOne}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            label=\"New Password\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            name=\"passwordTwo\"\r\n            value={passwordTwo}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            label=\"Confirm New Password\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <Button\r\n            type=\"submit\"\r\n            className={classes.primaryLightButton}\r\n            variant=\"contained\"\r\n          >\r\n            Reset Password\r\n          </Button>\r\n\r\n          {error && <p>{error}</p>}\r\n          {success && <p>{success}</p>}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default withFirebase(PasswordChangeForm);\r\nexport default compose(withFirebase, withStyles(styles))(PasswordChangeForm);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/EditList/EditListPage.js\";\nimport React from \"react\";\nimport api from \"../../api\";\nimport CardInputs from \"./CardInputs\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport LoadingPage from \"./LoadingList\";\nimport styles from \"../../constants/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CreateDialog from \"./CreateDialog\";\nimport InvalidDialog from \"./InvalidDialog\";\n\nclass EditListPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkValid = (title, cards) => {\n      var terms = [];\n      var errs = [];\n\n      if (title === \"\") {\n        errs.push(\"a\");\n      }\n\n      for (let i = 0; i < cards.length; i++) {\n        var cardError = `${i}`;\n\n        if (cards[i].term === \"\") {\n          cardError += \"t\";\n        }\n\n        if (cards[i].description === \"\") {\n          cardError += \"d\";\n        }\n\n        if (terms.includes(cards[i].term)) {\n          cardError += \"m\";\n        }\n\n        if (cardError !== `${i}`) {\n          errs.push(cardError);\n        } else {\n          terms.push(cards[i].term);\n        }\n      }\n\n      return errs;\n    };\n\n    this.trimWhiteSpace = () => {\n      let {\n        title,\n        cards\n      } = this.state;\n      title = title.trim();\n\n      for (let i = 0; i < cards.length; i++) {\n        cards[i].term = cards[i].term.trim();\n        cards[i].description = cards[i].description.trim();\n      }\n\n      this.setState({\n        title: title,\n        cards: cards\n      });\n    };\n\n    this.closeInvalid = () => {\n      this.setState({\n        showInvalidDialog: false\n      });\n    };\n\n    this.closeValid = () => {\n      this.setState({\n        showDialog: false\n      });\n    };\n\n    this.componentDidMount = async () => {\n      await api.getStudySetById(this.state.id).then(res => {\n        var set = res.data.data;\n        this.setState({\n          title: set.title,\n          oldtitle: set.title,\n          cards: set.cards\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n      this.setState({\n        render: true\n      });\n    };\n\n    this.deleteCard = i => {\n      let currentCards = [...this.state.cards];\n      currentCards.splice(i, 1);\n      this.setState({\n        cards: currentCards\n      });\n    };\n\n    this.addCard = e => {\n      this.setState(prevState => ({\n        cards: [...prevState.cards, {\n          term: \"\",\n          description: \"\"\n        }]\n      }));\n    };\n\n    this.handleChangeCardTerm = async (event, idx) => {\n      const term = event.target.value;\n      let cards = [...this.state.cards];\n      let newCard = { ...cards[idx]\n      };\n      newCard.term = term;\n      cards[idx] = newCard;\n      this.setState({\n        cards\n      });\n    };\n\n    this.handleChangeCardDef = async (event, idx) => {\n      const def = event.target.value;\n      let cards = [...this.state.cards];\n      let newCard = { ...cards[idx]\n      };\n      newCard.description = def;\n      cards[idx] = newCard;\n      this.setState({\n        cards\n      });\n    };\n\n    this.handleChangeInputName = async event => {\n      const title = event.target.value;\n      this.setState({\n        title\n      });\n    };\n\n    this.validateSet = async title => {\n      let valid = true;\n      const oldtitle = this.state.oldtitle;\n      await api.checkTitleExists(title).then(res => {\n        console.log(res);\n\n        if (res.data.valid && res.data.success || res.data.success && !res.data.valid && title === oldtitle) {\n          valid = true;\n        } else {\n          valid = false;\n        }\n      }).catch(error => {\n        console.log(\"Error while validating set title: \" + error);\n        valid = false;\n      });\n      return valid;\n    };\n\n    this.handleUpdateStudySet = async () => {\n      this.trimWhiteSpace();\n      let {\n        id,\n        title,\n        cards\n      } = this.state;\n      let errors = await this.checkValid(title, cards);\n      let validateResult = await this.validateSet(title);\n\n      if (!validateResult) {\n        errors.unshift(\"e\");\n      }\n\n      if (errors.length > 0) {\n        this.setState({\n          showInvalidDialog: true,\n          errors: errors\n        });\n        return;\n      }\n\n      api.updateStudySetById(id, title, cards).then(res => {\n        this.setState({\n          showDialog: true\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.state = {\n      render: false,\n      id: props.id,\n      title: \"\",\n      oldtitle: \"\",\n      cards: [],\n      showDialog: false,\n      showInvalidDialog: false\n    };\n  }\n\n  render() {\n    const {\n      title,\n      cards,\n      render,\n      showDialog,\n      showInvalidDialog,\n      id,\n      errors\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    let returnedState = /*#__PURE__*/React.createElement(LoadingPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    });\n\n    if (render) {\n      returnedState = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        className: classes.intro,\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, \"Edit set\"), /*#__PURE__*/React.createElement(TextField, {\n        className: classes.titleTextField,\n        onChange: this.handleChangeInputName,\n        name: \"title\",\n        id: \"title\",\n        autoFocus: true,\n        InputProps: {\n          classes: {\n            input: classes.titleResize\n          }\n        },\n        variant: \"filled\",\n        label: \"Title\",\n        value: title,\n        placeholder: \"Untitled List\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(CardInputs, {\n        cards: cards,\n        removeItem: this.deleteCard,\n        changeTerm: this.handleChangeCardTerm,\n        changeDef: this.handleChangeCardDef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.addCard,\n        className: `${classes.button} ${classes.secondaryButton}`,\n        variant: \"contained\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleUpdateStudySet,\n        className: classes.button,\n        variant: \"contained\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(CreateDialog, {\n        showDialog: showDialog,\n        closeDialog: this.closeValid,\n        id: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(InvalidDialog, {\n        showDialog: showInvalidDialog,\n        closeInvalidDialog: this.closeInvalid,\n        errors: errors,\n        cards: cards,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return returnedState;\n  }\n\n}\n\nexport default withStyles(styles)(EditListPage);","map":{"version":3,"sources":["/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/EditList/EditListPage.js"],"names":["React","api","CardInputs","TextField","Button","AddIcon","LoadingPage","styles","withStyles","Typography","CreateDialog","InvalidDialog","EditListPage","Component","constructor","props","checkValid","title","cards","terms","errs","push","i","length","cardError","term","description","includes","trimWhiteSpace","state","trim","setState","closeInvalid","showInvalidDialog","closeValid","showDialog","componentDidMount","getStudySetById","id","then","res","set","data","oldtitle","catch","e","console","log","render","deleteCard","currentCards","splice","addCard","prevState","handleChangeCardTerm","event","idx","target","value","newCard","handleChangeCardDef","def","handleChangeInputName","validateSet","valid","checkTitleExists","success","error","handleUpdateStudySet","errors","validateResult","unshift","updateStudySetById","classes","returnedState","intro","titleTextField","input","titleResize","button","secondaryButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport api from \"../../api\";\r\nimport CardInputs from \"./CardInputs\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport LoadingPage from \"./LoadingList\";\r\nimport styles from \"../../constants/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CreateDialog from \"./CreateDialog\";\r\nimport InvalidDialog from \"./InvalidDialog\";\r\n\r\nclass EditListPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      render: false,\r\n      id: props.id,\r\n      title: \"\",\r\n      oldtitle: \"\",\r\n      cards: [],\r\n      showDialog: false,\r\n      showInvalidDialog: false,\r\n    };\r\n  }\r\n\r\n  checkValid = (title, cards) => {\r\n    var terms = [];\r\n    var errs = [];\r\n    if (title === \"\") {\r\n      errs.push(\"a\");\r\n    }\r\n    for (let i = 0; i < cards.length; i++) {\r\n      var cardError = `${i}`;\r\n      if (cards[i].term === \"\") {\r\n        cardError += \"t\";\r\n      }\r\n      if (cards[i].description === \"\") {\r\n        cardError += \"d\";\r\n      }\r\n      if (terms.includes(cards[i].term)) {\r\n        cardError += \"m\";\r\n      }\r\n      if (cardError !== `${i}`) {\r\n        errs.push(cardError);\r\n      } else {\r\n        terms.push(cards[i].term);\r\n      }\r\n    }\r\n    return errs;\r\n  };\r\n\r\n  trimWhiteSpace = () => {\r\n    let { title, cards } = this.state;\r\n    title = title.trim();\r\n    for (let i = 0; i < cards.length; i++) {\r\n      cards[i].term = cards[i].term.trim();\r\n      cards[i].description = cards[i].description.trim();\r\n    }\r\n    this.setState({ title: title, cards: cards });\r\n  };\r\n\r\n  closeInvalid = () => {\r\n    this.setState({ showInvalidDialog: false });\r\n  };\r\n\r\n  closeValid = () => {\r\n    this.setState({ showDialog: false });\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    await api\r\n      .getStudySetById(this.state.id)\r\n      .then((res) => {\r\n        var set = res.data.data;\r\n        this.setState({\r\n          title: set.title,\r\n          oldtitle: set.title,\r\n          cards: set.cards,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    this.setState({ render: true });\r\n  };\r\n\r\n  deleteCard = (i) => {\r\n    let currentCards = [...this.state.cards];\r\n    currentCards.splice(i, 1);\r\n    this.setState({ cards: currentCards });\r\n  };\r\n\r\n  addCard = (e) => {\r\n    this.setState((prevState) => ({\r\n      cards: [...prevState.cards, { term: \"\", description: \"\" }],\r\n    }));\r\n  };\r\n\r\n  handleChangeCardTerm = async (event, idx) => {\r\n    const term = event.target.value;\r\n    let cards = [...this.state.cards];\r\n    let newCard = { ...cards[idx] };\r\n    newCard.term = term;\r\n    cards[idx] = newCard;\r\n    this.setState({ cards });\r\n  };\r\n\r\n  handleChangeCardDef = async (event, idx) => {\r\n    const def = event.target.value;\r\n    let cards = [...this.state.cards];\r\n    let newCard = { ...cards[idx] };\r\n    newCard.description = def;\r\n    cards[idx] = newCard;\r\n    this.setState({ cards });\r\n  };\r\n\r\n  handleChangeInputName = async (event) => {\r\n    const title = event.target.value;\r\n    this.setState({ title });\r\n  };\r\n\r\n  validateSet = async (title) => {\r\n    let valid = true;\r\n    const oldtitle = this.state.oldtitle;\r\n    await api\r\n      .checkTitleExists(title)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (\r\n          (res.data.valid && res.data.success) ||\r\n          (res.data.success && !res.data.valid && title === oldtitle)\r\n        ) {\r\n          valid = true;\r\n        } else {\r\n          valid = false;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while validating set title: \" + error);\r\n        valid = false;\r\n      });\r\n    return valid;\r\n  };\r\n\r\n  handleUpdateStudySet = async () => {\r\n    this.trimWhiteSpace();\r\n    let { id, title, cards } = this.state;\r\n    let errors = await this.checkValid(title, cards);\r\n    let validateResult = await this.validateSet(title);\r\n    if (!validateResult) {\r\n      errors.unshift(\"e\");\r\n    }\r\n\r\n    if (errors.length > 0) {\r\n      this.setState({ showInvalidDialog: true, errors: errors });\r\n      return;\r\n    }\r\n    api\r\n      .updateStudySetById(id, title, cards)\r\n      .then((res) => {\r\n        this.setState({ showDialog: true });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      cards,\r\n      render,\r\n      showDialog,\r\n      showInvalidDialog,\r\n      id,\r\n      errors,\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n    let returnedState = <LoadingPage />;\r\n    if (render) {\r\n      returnedState = (\r\n        <div>\r\n          <Typography variant=\"h3\" className={classes.intro} gutterBottom>\r\n            Edit set\r\n          </Typography>\r\n          <TextField\r\n            className={classes.titleTextField}\r\n            onChange={this.handleChangeInputName}\r\n            name=\"title\"\r\n            id=\"title\"\r\n            autoFocus\r\n            InputProps={{\r\n              classes: {\r\n                input: classes.titleResize,\r\n              },\r\n            }}\r\n            variant=\"filled\"\r\n            label=\"Title\"\r\n            value={title}\r\n            placeholder=\"Untitled List\"\r\n          />\r\n          <br />\r\n          <CardInputs\r\n            cards={cards}\r\n            removeItem={this.deleteCard}\r\n            changeTerm={this.handleChangeCardTerm}\r\n            changeDef={this.handleChangeCardDef}\r\n          />\r\n          <Button\r\n            onClick={this.addCard}\r\n            className={`${classes.button} ${classes.secondaryButton}`}\r\n            variant=\"contained\"\r\n          >\r\n            <AddIcon />\r\n          </Button>\r\n          <Button\r\n            onClick={this.handleUpdateStudySet}\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n          <CreateDialog\r\n            showDialog={showDialog}\r\n            closeDialog={this.closeValid}\r\n            id={id}\r\n          />\r\n          <InvalidDialog\r\n            showDialog={showInvalidDialog}\r\n            closeInvalidDialog={this.closeInvalid}\r\n            errors={errors}\r\n            cards={cards}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return returnedState;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(EditListPage);\r\n"]},"metadata":{},"sourceType":"module"}
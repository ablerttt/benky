{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/PracticeList/index.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport api from \"../../api\";\nimport styles from \"../../constants/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PracticeContainer from \"./PracticeContainer\";\nimport NotFoundPage from \"../../pages/404\";\n\nclass PracticeSet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await api.getStudySetById(this.state.id).then(res => {\n        console.log(res);\n\n        if (res.data.success && res.data.data != null) {\n          this.setState({\n            valid: true,\n            title: res.data.data.title,\n            cards: res.data.data.cards,\n            checked: true\n          });\n        } else {\n          this.setState({\n            valid: false,\n            checked: true\n          });\n        }\n      }).catch(e => {\n        // console.log(\"Error is \" + e);\n        this.setState({\n          valid: false,\n          checked: true\n        });\n      });\n    };\n\n    this.state = {\n      id: props.match.params.id,\n      checked: false\n    };\n  }\n\n  render() {\n    let {\n      valid,\n      title,\n      cards,\n      checked\n    } = this.state;\n    let renderContainer = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }\n    }, \"Loading!\");\n\n    if (checked && valid) {\n      renderContainer = /*#__PURE__*/React.createElement(PracticeContainer, {\n        title: title,\n        cards: cards,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      });\n    } else if (checked && !valid) {\n      renderContainer = /*#__PURE__*/React.createElement(NotFoundPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      });\n    }\n\n    return renderContainer;\n  }\n\n}\n\nclass PracticeLinkBase extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.practiceSet = e => {\n      e.preventDefault();\n      window.location.href = `/p/${this.props.id}`;\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.practiceSet,\n      color: \"primary\",\n      className: classes.primaryLightButton,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Practice\"));\n  }\n\n}\n\nconst PracticeLink = withStyles(styles)(PracticeLinkBase);\nexport { PracticeLink };\nexport default withStyles(styles)(PracticeSet);","map":{"version":3,"sources":["/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/PracticeList/index.js"],"names":["React","Button","api","styles","withStyles","PracticeContainer","NotFoundPage","PracticeSet","Component","constructor","props","componentDidMount","getStudySetById","state","id","then","res","console","log","data","success","setState","valid","title","cards","checked","catch","e","match","params","render","renderContainer","PracticeLinkBase","practiceSet","preventDefault","window","location","href","classes","primaryLightButton","PracticeLink"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport api from \"../../api\";\r\nimport styles from \"../../constants/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PracticeContainer from \"./PracticeContainer\";\r\nimport NotFoundPage from \"../../pages/404\";\r\n\r\nclass PracticeSet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: props.match.params.id,\r\n      checked: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await api\r\n      .getStudySetById(this.state.id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.success && res.data.data != null) {\r\n          this.setState({\r\n            valid: true,\r\n            title: res.data.data.title,\r\n            cards: res.data.data.cards,\r\n            checked: true,\r\n          });\r\n        } else {\r\n          this.setState({ valid: false, checked: true });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Error is \" + e);\r\n        this.setState({ valid: false, checked: true });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    let { valid, title, cards, checked } = this.state;\r\n    let renderContainer = <div>Loading!</div>;\r\n\r\n    if (checked && valid) {\r\n      renderContainer = <PracticeContainer title={title} cards={cards} />;\r\n    } else if (checked && !valid) {\r\n      renderContainer = <NotFoundPage />;\r\n    }\r\n\r\n    return renderContainer;\r\n  }\r\n}\r\n\r\nclass PracticeLinkBase extends React.Component {\r\n  practiceSet = (e) => {\r\n    e.preventDefault();\r\n\r\n    window.location.href = `/p/${this.props.id}`;\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={this.practiceSet}\r\n          color=\"primary\"\r\n          className={classes.primaryLightButton}\r\n          variant=\"contained\"\r\n        >\r\n          Practice\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PracticeLink = withStyles(styles)(PracticeLinkBase);\r\n\r\nexport { PracticeLink };\r\n\r\nexport default withStyles(styles)(PracticeSet);\r\n"]},"metadata":{},"sourceType":"module"}
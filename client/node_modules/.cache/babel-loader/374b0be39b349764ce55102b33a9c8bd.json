{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/TestList/TestOptions.js\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: \"5em\",\n    textTransform: \"none\"\n  },\n  input: {\n    display: \"none\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  }\n}));\n\nconst SampleTerms = props => {\n  const limited = props.cards.slice(0, 5);\n  return limited.map((item, i) => {\n    return /*#__PURE__*/React.createElement(Button, {\n      key: `sample-${i}`,\n      variant: \"outlined\",\n      className: props.t.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, item.term);\n  });\n};\n\nconst TestOptions = props => {\n  const classes = useStyles();\n  const [expandedId, setExpandedId] = React.useState(-1);\n\n  const handleExpandClickID = i => {\n    setExpandedId(expandedId === i ? -1 : i);\n  };\n\n  const items = props.set;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, items.map((item, i) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      key: item._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardActionArea, {\n      component: Link,\n      to: `/test/${item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, \"Last edited \", item.updatedAt))), /*#__PURE__*/React.createElement(CardActions, {\n      disableSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"add to favorites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.expand,\n      onClick: () => handleExpandClickID(i),\n      \"aria-expanded\": expandedId === i,\n      \"aria-label\": \"show more\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Collapse, {\n      in: expandedId === i,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      paragraph: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, \"Sample Terms:\"), /*#__PURE__*/React.createElement(SampleTerms, {\n      t: classes,\n      cards: item.cards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    })))));\n  }));\n};\n\nexport default TestOptions;","map":{"version":3,"sources":["/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/TestList/TestOptions.js"],"names":["React","Grid","Card","CardContent","CardActions","CardActionArea","Typography","Button","makeStyles","Collapse","IconButton","ExpandMoreIcon","FavoriteIcon","Link","useStyles","theme","button","margin","spacing","borderRadius","textTransform","input","display","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","SampleTerms","props","limited","cards","slice","map","item","i","t","term","TestOptions","classes","expandedId","setExpandedId","useState","handleExpandClickID","items","set","_id","title","updatedAt"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    borderRadius: \"5em\",\r\n    textTransform: \"none\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst SampleTerms = (props) => {\r\n  const limited = props.cards.slice(0, 5);\r\n  return limited.map((item, i) => {\r\n    return (\r\n      <Button key={`sample-${i}`} variant=\"outlined\" className={props.t.button}>\r\n        {item.term}\r\n      </Button>\r\n    );\r\n  });\r\n};\r\n\r\nconst TestOptions = (props) => {\r\n  const classes = useStyles();\r\n  const [expandedId, setExpandedId] = React.useState(-1);\r\n\r\n  const handleExpandClickID = (i) => {\r\n    setExpandedId(expandedId === i ? -1 : i);\r\n  };\r\n\r\n  const items = props.set;\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {items.map((item, i) => {\r\n        return (\r\n          <Grid item xs={12} sm={6} key={item._id}>\r\n            <Card>\r\n              <CardActionArea component={Link} to={`/test/${item._id}`}>\r\n                <CardContent>\r\n                  <Typography variant=\"h5\">{item.title}</Typography>\r\n                  <br />\r\n                  <Typography variant=\"body1\" gutterBottom>\r\n                    Last edited {item.updatedAt}\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                  <FavoriteIcon fontSize=\"small\" />\r\n                </IconButton>\r\n                <IconButton\r\n                  className={classes.expand}\r\n                  onClick={() => handleExpandClickID(i)}\r\n                  aria-expanded={expandedId === i}\r\n                  aria-label=\"show more\"\r\n                >\r\n                  <ExpandMoreIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </CardActions>\r\n              <Collapse in={expandedId === i} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                  <Typography paragraph>Sample Terms:</Typography>\r\n                  <SampleTerms t={classes} cards={item.cards} />\r\n                </CardContent>\r\n              </Collapse>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TestOptions;\r\n"]},"metadata":{},"sourceType":"module"}
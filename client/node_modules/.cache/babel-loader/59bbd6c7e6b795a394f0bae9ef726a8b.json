{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/NewList/index.js\";\nimport React from \"react\";\nimport api from \"../../api\";\nimport CardInputs from \"./CardInputs\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"../../constants/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CreateDialog from \"./CreateDialog\";\nimport InvalidDialog from \"./InvalidDialog\";\n\nclass StudySetInsert extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkValid = (title, cards) => {\n      var terms = [];\n      var errs = [];\n\n      if (title === \"\") {\n        errs.push(\"a\");\n      }\n\n      for (let i = 0; i < cards.length; i++) {\n        var cardError = `${i}`;\n\n        if (cards[i].term === \"\") {\n          cardError += \"t\";\n        }\n\n        if (cards[i].description === \"\") {\n          cardError += \"d\";\n        }\n\n        if (terms.includes(cards[i].term)) {\n          cardError += \"m\";\n        }\n\n        if (cardError !== `${i}`) {\n          errs.push(cardError);\n        } else {\n          terms.push(cards[i].term);\n        }\n      }\n\n      return errs;\n    };\n\n    this.handleChangeCardTerm = async (event, idx) => {\n      const term = event.target.value;\n      let cards = [...this.state.cards];\n      let newCard = { ...cards[idx]\n      };\n      newCard.term = term;\n      cards[idx] = newCard;\n      this.setState({\n        cards\n      });\n    };\n\n    this.handleChangeCardDef = async (event, idx) => {\n      const def = event.target.value;\n      let cards = [...this.state.cards];\n      let newCard = { ...cards[idx]\n      };\n      newCard.description = def;\n      cards[idx] = newCard;\n      this.setState({\n        cards\n      });\n    };\n\n    this.handleChangeInputName = async event => {\n      const title = event.target.value;\n      this.setState({\n        title\n      });\n    };\n\n    this.trimWhiteSpace = () => {\n      let {\n        title,\n        cards\n      } = this.state;\n      title = title.trim();\n\n      for (let i = 0; i < cards.length; i++) {\n        cards[i].term = cards[i].term.trim();\n        cards[i].description = cards[i].description.trim();\n      }\n\n      this.setState({\n        title: title,\n        cards: cards\n      });\n    };\n\n    this.validateSet = async title => {\n      console.log(\"Check validate set with \" + title);\n      let valid = true;\n      await api.checkTitleExists(title).then(res => {\n        console.log(res);\n\n        if (res.data.valid && res.data.success) {} else {\n          valid = false;\n        }\n      }).catch(error => {\n        console.log(\"Error while validating set title: \" + error);\n        valid = false;\n      });\n      return valid;\n    };\n\n    this.handleInsertStudySet = async () => {\n      this.trimWhiteSpace();\n      let {\n        title,\n        cards\n      } = this.state;\n      let errors = this.checkValid(title, cards);\n      let validateResult = await this.validateSet(title);\n\n      if (!validateResult) {\n        errors.unshift(\"e\");\n      }\n\n      if (errors.length > 0) {\n        this.setState({\n          showInvalidDialog: true,\n          errors: errors\n        });\n        return;\n      }\n\n      api.insertStudySet(title, cards).then(res => {\n        this.setState({\n          id: res.data.id,\n          showDialog: true\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.deleteCard = i => {\n      let currentCards = [...this.state.cards];\n      currentCards.splice(i, 1);\n      this.setState({\n        cards: currentCards\n      });\n    };\n\n    this.addCard = e => {\n      this.setState(prevState => ({\n        cards: [...prevState.cards, {\n          term: \"\",\n          description: \"\"\n        }]\n      }));\n    };\n\n    this.closeInvalid = () => {\n      this.setState({\n        showInvalidDialog: false\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      cards: [{\n        term: \"\",\n        description: \"\"\n      }],\n      showDialog: false,\n      showInvalidDialog: false,\n      id: \"\"\n    };\n  }\n\n  render() {\n    const {\n      title,\n      cards,\n      showDialog,\n      showInvalidDialog,\n      id,\n      errors\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      className: classes.intro,\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, \"Create a New Set\"), /*#__PURE__*/React.createElement(TextField, {\n      className: classes.titleTextField,\n      onChange: this.handleChangeInputName,\n      name: \"title\",\n      id: \"title\",\n      autoFocus: true,\n      InputProps: {\n        classes: {\n          input: classes.titleResize\n        }\n      },\n      variant: \"filled\",\n      label: \"Title\",\n      value: title,\n      placeholder: \"Untitled List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardInputs, {\n      cards: cards,\n      removeItem: this.deleteCard,\n      changeTerm: this.handleChangeCardTerm,\n      changeDef: this.handleChangeCardDef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.addCard,\n      className: `${classes.button} ${classes.secondaryButton}`,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleInsertStudySet,\n      className: classes.button,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, \"Create\"), /*#__PURE__*/React.createElement(CreateDialog, {\n      showDialog: showDialog,\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InvalidDialog, {\n      showDialog: showInvalidDialog,\n      closeInvalidDialog: this.closeInvalid,\n      errors: errors,\n      cards: cards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withStyles(styles)(StudySetInsert);","map":{"version":3,"sources":["/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/components/NewList/index.js"],"names":["React","api","CardInputs","TextField","AddIcon","Button","styles","withStyles","Typography","CreateDialog","InvalidDialog","StudySetInsert","Component","constructor","props","checkValid","title","cards","terms","errs","push","i","length","cardError","term","description","includes","handleChangeCardTerm","event","idx","target","value","state","newCard","setState","handleChangeCardDef","def","handleChangeInputName","trimWhiteSpace","trim","validateSet","console","log","valid","checkTitleExists","then","res","data","success","catch","error","handleInsertStudySet","errors","validateResult","unshift","showInvalidDialog","insertStudySet","id","showDialog","e","deleteCard","currentCards","splice","addCard","prevState","closeInvalid","render","classes","intro","titleTextField","input","titleResize","button","secondaryButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport api from \"../../api\";\r\nimport CardInputs from \"./CardInputs\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styles from \"../../constants/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport CreateDialog from \"./CreateDialog\";\r\nimport InvalidDialog from \"./InvalidDialog\";\r\n\r\nclass StudySetInsert extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      cards: [{ term: \"\", description: \"\" }],\r\n      showDialog: false,\r\n      showInvalidDialog: false,\r\n      id: \"\",\r\n    };\r\n  }\r\n\r\n  checkValid = (title, cards) => {\r\n    var terms = [];\r\n    var errs = [];\r\n    if (title === \"\") {\r\n      errs.push(\"a\");\r\n    }\r\n    for (let i = 0; i < cards.length; i++) {\r\n      var cardError = `${i}`;\r\n      if (cards[i].term === \"\") {\r\n        cardError += \"t\";\r\n      }\r\n      if (cards[i].description === \"\") {\r\n        cardError += \"d\";\r\n      }\r\n      if (terms.includes(cards[i].term)) {\r\n        cardError += \"m\";\r\n      }\r\n      if (cardError !== `${i}`) {\r\n        errs.push(cardError);\r\n      } else {\r\n        terms.push(cards[i].term);\r\n      }\r\n    }\r\n    return errs;\r\n  };\r\n\r\n  handleChangeCardTerm = async (event, idx) => {\r\n    const term = event.target.value;\r\n    let cards = [...this.state.cards];\r\n    let newCard = { ...cards[idx] };\r\n    newCard.term = term;\r\n    cards[idx] = newCard;\r\n    this.setState({ cards });\r\n  };\r\n\r\n  handleChangeCardDef = async (event, idx) => {\r\n    const def = event.target.value;\r\n    let cards = [...this.state.cards];\r\n    let newCard = { ...cards[idx] };\r\n    newCard.description = def;\r\n    cards[idx] = newCard;\r\n    this.setState({ cards });\r\n  };\r\n\r\n  handleChangeInputName = async (event) => {\r\n    const title = event.target.value;\r\n    this.setState({ title });\r\n  };\r\n\r\n  trimWhiteSpace = () => {\r\n    let { title, cards } = this.state;\r\n    title = title.trim();\r\n    for (let i = 0; i < cards.length; i++) {\r\n      cards[i].term = cards[i].term.trim();\r\n      cards[i].description = cards[i].description.trim();\r\n    }\r\n    this.setState({ title: title, cards: cards });\r\n  };\r\n\r\n  validateSet = async (title) => {\r\n    console.log(\"Check validate set with \" + title);\r\n    let valid = true;\r\n    await api\r\n      .checkTitleExists(title)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.valid && res.data.success) {\r\n        } else {\r\n          valid = false;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while validating set title: \" + error);\r\n        valid = false;\r\n      });\r\n    return valid;\r\n  };\r\n\r\n  handleInsertStudySet = async () => {\r\n    this.trimWhiteSpace();\r\n    let { title, cards } = this.state;\r\n    let errors = this.checkValid(title, cards);\r\n    let validateResult = await this.validateSet(title);\r\n    if (!validateResult) {\r\n      errors.unshift(\"e\");\r\n    }\r\n\r\n    if (errors.length > 0) {\r\n      this.setState({ showInvalidDialog: true, errors: errors });\r\n      return;\r\n    }\r\n\r\n    api\r\n      .insertStudySet(title, cards)\r\n      .then((res) => {\r\n        this.setState({\r\n          id: res.data.id,\r\n          showDialog: true,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  deleteCard = (i) => {\r\n    let currentCards = [...this.state.cards];\r\n    currentCards.splice(i, 1);\r\n    this.setState({ cards: currentCards });\r\n  };\r\n\r\n  addCard = (e) => {\r\n    this.setState((prevState) => ({\r\n      cards: [...prevState.cards, { term: \"\", description: \"\" }],\r\n    }));\r\n  };\r\n\r\n  closeInvalid = () => {\r\n    this.setState({ showInvalidDialog: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      cards,\r\n      showDialog,\r\n      showInvalidDialog,\r\n      id,\r\n      errors,\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h3\" className={classes.intro} gutterBottom>\r\n          Create a New Set\r\n        </Typography>\r\n        <TextField\r\n          className={classes.titleTextField}\r\n          onChange={this.handleChangeInputName}\r\n          name=\"title\"\r\n          id=\"title\"\r\n          autoFocus\r\n          InputProps={{\r\n            classes: {\r\n              input: classes.titleResize,\r\n            },\r\n          }}\r\n          variant=\"filled\"\r\n          label=\"Title\"\r\n          value={title}\r\n          placeholder=\"Untitled List\"\r\n        />\r\n        <br />\r\n        <CardInputs\r\n          cards={cards}\r\n          removeItem={this.deleteCard}\r\n          changeTerm={this.handleChangeCardTerm}\r\n          changeDef={this.handleChangeCardDef}\r\n        />\r\n        <Button\r\n          onClick={this.addCard}\r\n          className={`${classes.button} ${classes.secondaryButton}`}\r\n          variant=\"contained\"\r\n        >\r\n          <AddIcon />\r\n        </Button>\r\n        <Button\r\n          onClick={this.handleInsertStudySet}\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n        >\r\n          Create\r\n        </Button>\r\n\r\n        <CreateDialog showDialog={showDialog} id={id} />\r\n        <InvalidDialog\r\n          showDialog={showInvalidDialog}\r\n          closeInvalidDialog={this.closeInvalid}\r\n          errors={errors}\r\n          cards={cards}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(StudySetInsert);\r\n"]},"metadata":{},"sourceType":"module"}
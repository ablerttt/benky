{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/auth/PasswordChange/index.js\";\nimport React, { Component } from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { compose } from \"recompose\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../constants/styles\";\nimport { exception } from \"console\";\nimport { verify } from \"crypto\";\nconst INITIAL_STATE = {\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  currentPassword: \"\",\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const {\n        passwordOne,\n        passwordTwo,\n        currentPassword\n      } = this.state;\n\n      if (passwordOne !== passwordTwo) {\n        this.setState({\n          error: {\n            message: \"The two passwords are different from each other.\"\n          }\n        });\n        return;\n      }\n\n      let verifyErr = await this.props.firebase.doCurrentPasswordVerification(currentPassword);\n      console.log(\"VERIFY ERR: \" + verifyErr + \"\\t\" + typeof verifyErr);\n\n      if (verifyErr) {\n        this.setState({\n          error: verifyErr\n        });\n        return;\n      }\n\n      let updateErr = this.props.firebase.doPasswordUpdate(passwordOne);\n      console.log(\"UPDATE ERR: \" + updateErr);\n\n      if (updateErr) {\n        this.setState({\n          error: updateErr\n        });\n      } else {\n        this.setState({\n          success: \"Successfully updated your password!\",\n          passwordOne: \"\",\n          passwordTwo: \"\",\n          currentPassword: \"\"\n        });\n      }\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = { ...INITIAL_STATE,\n      updated: false,\n      success: \"\"\n    };\n  }\n\n  render() {\n    const {\n      currentPassword,\n      passwordOne,\n      passwordTwo,\n      error,\n      success\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Change the email that your account is linked to. If you forget your password, you'll receive any emails from this email instead.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"currentPassword\",\n      value: currentPassword,\n      onChange: this.onChange,\n      type: \"password\",\n      label: \"Original Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.onChange,\n      type: \"password\",\n      label: \"New Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.onChange,\n      type: \"password\",\n      label: \"Confirm New Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: classes.primaryLightButton,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Reset Password\"), error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, error.message), success && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }, success.message)));\n  }\n\n} // export default withFirebase(PasswordChangeForm);\n\n\nexport default compose(withFirebase, withStyles(styles))(PasswordChangeForm);","map":{"version":3,"sources":["/mnt/c/Users/Albert/Documents/UCLA 2019/Projects/flare/client/src/auth/PasswordChange/index.js"],"names":["React","Component","withFirebase","TextField","Button","compose","withStyles","styles","exception","verify","INITIAL_STATE","passwordOne","passwordTwo","currentPassword","error","PasswordChangeForm","constructor","props","onSubmit","e","preventDefault","state","setState","message","verifyErr","firebase","doCurrentPasswordVerification","console","log","updateErr","doPasswordUpdate","success","onChange","event","target","name","value","updated","render","classes","primaryLightButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,EADO;AAEpBC,EAAAA,WAAW,EAAE,EAFO;AAGpBC,EAAAA,eAAe,EAAE,EAHG;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAAtB;;AAOA,MAAMC,kBAAN,SAAiCd,SAAjC,CAA2C;AACzCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,QALmB,GAKR,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAM;AAAET,QAAAA,WAAF;AAAeC,QAAAA,WAAf;AAA4BC,QAAAA;AAA5B,UAAgD,KAAKQ,KAA3D;;AAEA,UAAIV,WAAW,KAAKC,WAApB,EAAiC;AAC/B,aAAKU,QAAL,CAAc;AACZR,UAAAA,KAAK,EAAE;AAAES,YAAAA,OAAO,EAAE;AAAX;AADK,SAAd;AAGA;AACD;;AAED,UAAIC,SAAS,GAAG,MAAM,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,6BAApB,CACpBb,eADoB,CAAtB;AAIAc,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBJ,SAAjB,GAA6B,IAA7B,GAAoC,OAAOA,SAAvD;;AACA,UAAIA,SAAJ,EAAe;AACb,aAAKF,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAEU;AAAT,SAAd;AACA;AACD;;AAED,UAAIK,SAAS,GAAG,KAAKZ,KAAL,CAAWQ,QAAX,CAAoBK,gBAApB,CAAqCnB,WAArC,CAAhB;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBC,SAA7B;;AACA,UAAIA,SAAJ,EAAe;AACb,aAAKP,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAEe;AAAT,SAAd;AACD,OAFD,MAEO;AACL,aAAKP,QAAL,CAAc;AACZS,UAAAA,OAAO,EAAE,qCADG;AAEZpB,UAAAA,WAAW,EAAE,EAFD;AAGZC,UAAAA,WAAW,EAAE,EAHD;AAIZC,UAAAA,eAAe,EAAE;AAJL,SAAd;AAMD;AACF,KAvCkB;;AAAA,SAyCnBmB,QAzCmB,GAyCPC,KAAD,IAAW;AACpB,WAAKX,QAAL,CAAc;AACZ,SAACW,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AADtB,OAAd;AAGD,KA7CkB;;AAEjB,SAAKf,KAAL,GAAa,EAAE,GAAGX,aAAL;AAAoB2B,MAAAA,OAAO,EAAE,KAA7B;AAAoCN,MAAAA,OAAO,EAAE;AAA7C,KAAb;AACD;;AA4CDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzB,MAAAA,eAAF;AAAmBF,MAAAA,WAAnB;AAAgCC,MAAAA,WAAhC;AAA6CE,MAAAA,KAA7C;AAAoDiB,MAAAA;AAApD,QAAgE,KAAKV,KAA3E;AACA,UAAM;AAAEkB,MAAAA;AAAF,QAAc,KAAKtB,KAAzB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0IADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,iBADP;AAEE,MAAA,KAAK,EAAEL,eAFT;AAGE,MAAA,QAAQ,EAAE,KAAKmB,QAHjB;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAC,mBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,KAAK,EAAErB,WAFT;AAGE,MAAA,QAAQ,EAAE,KAAKqB,QAHjB;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAC,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,eAiBE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,KAAK,EAAEpB,WAFT;AAGE,MAAA,QAAQ,EAAE,KAAKoB,QAHjB;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAC,sBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,eA0BE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEO,OAAO,CAACC,kBAFrB;AAGE,MAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA1BF,EAkCG1B,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACS,OAAV,CAlCZ,EAmCGQ,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAACR,OAAZ,CAnCd,CANF,CADF;AA8CD;;AAjGwC,C,CAoG3C;;;AACA,eAAelB,OAAO,CAACH,YAAD,EAAeI,UAAU,CAACC,MAAD,CAAzB,CAAP,CAA0CQ,kBAA1C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { compose } from \"recompose\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"../../constants/styles\";\r\nimport { exception } from \"console\";\r\nimport { verify } from \"crypto\";\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  currentPassword: \"\",\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE, updated: false, success: \"\" };\r\n  }\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { passwordOne, passwordTwo, currentPassword } = this.state;\r\n\r\n    if (passwordOne !== passwordTwo) {\r\n      this.setState({\r\n        error: { message: \"The two passwords are different from each other.\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    let verifyErr = await this.props.firebase.doCurrentPasswordVerification(\r\n      currentPassword\r\n    );\r\n    \r\n    console.log(\"VERIFY ERR: \" + verifyErr + \"\\t\" + typeof verifyErr);\r\n    if (verifyErr) {\r\n      this.setState({ error: verifyErr });\r\n      return;\r\n    }\r\n\r\n    let updateErr = this.props.firebase.doPasswordUpdate(passwordOne);\r\n    console.log(\"UPDATE ERR: \" + updateErr);\r\n    if (updateErr) {\r\n      this.setState({ error: updateErr });\r\n    } else {\r\n      this.setState({\r\n        success: \"Successfully updated your password!\",\r\n        passwordOne: \"\",\r\n        passwordTwo: \"\",\r\n        currentPassword: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { currentPassword, passwordOne, passwordTwo, error, success } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <div>\r\n          Change the email that your account is linked to. If you forget your\r\n          password, you'll receive any emails from this email instead.\r\n        </div>\r\n        <br />\r\n        <form onSubmit={this.onSubmit}>\r\n          <TextField\r\n            name=\"currentPassword\"\r\n            value={currentPassword}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            label=\"Original Password\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            name=\"passwordOne\"\r\n            value={passwordOne}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            label=\"New Password\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            name=\"passwordTwo\"\r\n            value={passwordTwo}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            label=\"Confirm New Password\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <Button\r\n            type=\"submit\"\r\n            className={classes.primaryLightButton}\r\n            variant=\"contained\"\r\n          >\r\n            Reset Password\r\n          </Button>\r\n\r\n          {error && <p>{error.message}</p>}\r\n          {success && <p>{success.message}</p>}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default withFirebase(PasswordChangeForm);\r\nexport default compose(withFirebase, withStyles(styles))(PasswordChangeForm);\r\n"]},"metadata":{},"sourceType":"module"}